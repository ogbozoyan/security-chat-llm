services:
  #  --------------------------------
  ollama:
    container_name: ollama
    image: ollama/ollama:latest
    restart: unless-stopped
    ports:
      - "11434:11434"
    healthcheck:
      test: ollama list || exit 1
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
    environment:
      - OLLAMA_DEBUG=1
    networks:
      - ollama_network
  #  --------------------------------
  ollama-models-pull:
    container_name: ollama-models-pull
    image: curlimages/curl:latest
    command: >
      sh -c "
      curl http://ollama:11434/api/pull -d '{\"name\":\"nomic-embed-text:latest\"}' &&
      curl http://ollama:11434/api/pull -d '{\"name\":\"llama3.1:latest\"}'
      "
    depends_on:
      ollama:
        condition: service_healthy
    networks:
      - ollama_network
  #  --------------------------------
  pgvector:
    image: 'pgvector/pgvector:pg16'
    environment:
      - 'POSTGRES_DB=core'
      - 'POSTGRES_PASSWORD=admin'
      - 'POSTGRES_USER=admin'
    labels:
      - "org.springframework.boot.service-connection=postgres"
    ports:
      - '5432:5432'
  #  --------------------------------
  backend:
    build:
      context: ./core
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      - 'DATASOURCE_URL=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/core}'
      - 'DATASOURCE_USERNAME=${POSTGRES_USER}'
      - 'DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}'
    depends_on:
      - pgvector
  #  --------------------------------
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
networks:
  ollama_network:
    driver: bridge
